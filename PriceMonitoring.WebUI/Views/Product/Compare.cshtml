@model List<ProductWithPriceAndWebsiteViewModel>
@{
    var chartProducts = TempData["Products"];
    var chartProduct = new List<ChartJsonModel>();
    var chartModel = new ChartViewModel();
    if (chartProducts is not null)
    {
        chartProduct = JsonConvert.DeserializeObject<List<ChartJsonModel>>(chartProducts.ToString());
        chartModel.Products = TempData["Products"].ToString();
        chartModel.Dates = TempData["Dates"].ToString();
        chartModel.Prices = TempData["Prices"].ToString();
    }

    var isUserAuthenticated = SessionModel.IsSessionExist(key: "email", httpContext: Context);

}


<h5>Compare page</h5>

@await Html.PartialAsync(partialViewName: "_SearchFormPartial")


@if (Model != null)
{
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-3">
                <form method="get">
                    @await Html.PartialAsync(partialViewName: "_ProductPartial", model: product)
                    <div class="text-center">
                        @if (chartProduct?.Where(x => x.Name == product.Product.Name).Count() > 0)
                        {
                            <button type="submit" class="btn btn-success" asp-action="AddToCompare" disabled>Add to compare</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-success" asp-action="AddToCompare">Add to compare</button>
                        }

                        @if (isUserAuthenticated)
                        {
                            <button type="submit" class="btn btn-primary m-1" asp-action="SubscribeToProduct" formmethod="post"> Subscribe </button>
                            @if (TempData["Message"] is not null && int.Parse(TempData["ProductId"].ToString()) == product.Product.Id)
                            {
                                string alertType = TempData["AlertType"] as string;
                                <div class="alert alert-@alertType"> @TempData["Message"] </div>
                            }
                        }
                    </div>
                </form>
            </div>
        }
    </div>
}



@section Scripts
{
    @await Html.PartialAsync("_ChartPartial", chartModel)
}



