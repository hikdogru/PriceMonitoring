@model List<ProductWithPriceAndWebsiteViewModel>
@{
    var chartProducts = ViewData["Products"];
    var chartProduct = new List<ChartJsonModel>();
    var chartModel = new ChartViewModel();
    if (chartProducts is not null)
    {
        chartProduct = JsonConvert.DeserializeObject<List<ChartJsonModel>>(chartProducts.ToString());
        chartModel.Products = ViewData["Products"].ToString();
        chartModel.Dates = ViewData["Dates"].ToString();
        chartModel.Prices = ViewData["Prices"].ToString();
    }

    var isUserAuthenticated = SessionModel.IsSessionExist(key: "email", httpContext: Context);

}


<h5>Compare page</h5>


<form method="get">
    <input type="search" class="form-control" name="q" placeholder="Product name" />
    <button type="submit" class="btn btn-primary mt-2" asp-action="Search"> Search </button>
</form>


@if (Model != null)
{
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-3">
                <form method="get">
                    @await Html.PartialAsync(partialViewName: "_ProductPartial", model: product)

                    @if (chartProduct?.Where(x => x.Name == product.Product.Name).Count() > 0)
                    {
                        <button type="submit" class="btn btn-success" asp-action="AddToCompare" disabled>Add to compare</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-success" asp-action="AddToCompare">Add to compare</button>
                    }
                    @if (isUserAuthenticated)
                    {
                        <button type="submit" class="btn btn-primary m-1" asp-action="SubscribeToProduct" formmethod="post"> Subscribe </button>
                        @if (TempData["Message"] is not null && int.Parse(TempData["ProductId"].ToString()) == product.Product.Id)
                        {
                            string alertType = TempData["AlertType"] as string;
                            <div class="alert alert-@alertType"> @TempData["Message"] </div>
                        }
                    }
                </form>
            </div>
        }
    </div>
}



@section Scripts
{
    @await Html.PartialAsync("_ChartPartial", chartModel)
}



